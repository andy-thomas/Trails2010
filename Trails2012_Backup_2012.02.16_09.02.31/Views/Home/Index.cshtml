@{
    ViewBag.Title = "Home Page";
}

<h2>@ViewBag.Message</h2>
<p>
    To learn more about ASP.NET MVC visit <a href="http://asp.net/mvc" title="ASP.NET MVC Website">http://asp.net/mvc</a>.
</p>

@*
<h3>Trail-head map</h3>
<p>Click on the map to set a marker. Bouble click on a marker to remove it.</p>
<div id="map_canvas" ></div>

@section Scripts { 
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script> 
} 
@section Styles { 
    html { height: 100% } 
    body { height: 100%; margin: 0px; padding: 0px } 
    #map_canvas { height: 600px } 
} 

<script type="text/javascript">

    // Andy - this is some code to allow user to add one (and only one) marker to the map, 
    // and to double-click on he marker to remove it

    var map;
    var markersArray = [];

    function initialize() {
        var latlng = new google.maps.LatLng(40.716948, -74.003563);

        var options = { zoom: 14, center: latlng,
            mapTypeId: google.maps.MapTypeId.TERRAIN
        };
        var map = new google.maps.Map(document.getElementById
			("map_canvas"), options);
        google.maps.event.addListener(map, 'click', function (e) {
            placeMarker(e.latLng, map);
        });
    }

    function placeMarker(position, map) {
        var marker = new google.maps.Marker({
            position: position,
            map: map
        });
        removeMarkers();
        markersArray.push(marker);
        google.maps.event.addListener(marker, 'dblclick', function (point, source, overlay) {
            marker.setMap(null);
        });
        //map.panTo(position);
    }

    // Removes the overlays from the map, but keeps them in the array 
    function removeMarkers() {
        if (markersArray) {
            for (i in markersArray) {
                markersArray[i].setMap(null);
                markersArray.splice(i);
            }
        }
    }


    $(function () {
        initialize();
    });
    
    
</script> *@